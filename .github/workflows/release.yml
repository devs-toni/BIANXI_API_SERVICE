name: Release

on:
  workflow_dispatch:

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      NEXT_RELEASE: ${{ env.NEXT_RELEASE }}
      VERSION: ${{ env.VERSION }}

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}


      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"
          cache: "maven"
          server-id: "github"

      - name: Get Version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - run: chmod +x ./mvnw

      - name: Prepare Maven Release
        run: |
          ./mvnw --batch-mode release:prepare
          NEXT_RELEASE=$(grep -r 'scm.tag=' release.properties | sed 's/scm.tag=//')
          echo "NEXT_RELEASE=$NEXT_RELEASE" >> $GITHUB_ENV

  upload-artifacts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [ prepare-release ]
    env:
      NEXT_RELEASE: ${{ needs.prepare-release.outputs.NEXT_RELEASE }}
      VERSION: ${{ needs.prepare-release.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.NEXT_RELEASE }}

      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"
          cache: "maven"
          server-id: "github"

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Grant Permissions
        run: chmod +x mvnw

      - name: Build
        run: ./mvnw --batch-mode package

      - name: Copy Jar File
        run: mv ${{ github.workspace }}/application/target/bianxi-api-boot-${{ env.VERSION }}.jar bianxi-api-${{ env.VERSION }}.jar

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push
        uses: docker/build-push-action@v3
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bianxi-api:${{ env.NEXT_RELEASE }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: ${{ env.NEXT_RELEASE }}
          token: ${{ secrets.GITHUB_TOKEN }}